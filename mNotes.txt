Game logic - Player inputs direction to go at prompts.
             Player input stored in variable (player.location ?)

adv.py contains input and logic
    needs imports - from room import Room, from player import Player

player.py contains Player class/constructor
    constructor - self, name, current_room
        func to return readable name and current room 

room.py contains Room class/constructor
    constructor - self, name, description
                additional - n_to, s_to, e_to, w_to
                func  __str__ to get string representation of object (maybe __repr__ ?)
https://dbader.org/blog/python-repr-vs-str


adv.py - 
    player object in outside room

    print current room name
    print description of room

    playerMove direction per input
        if no room in that direction - feedback msg:else player move current_room to x_to
        n_to
        s_to
        e_to
        w_to

    q to quit
        feedback msg
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
make rooms to hold multiple items
item.py -
    items in an array. itemArray sliced to pickup or drop
    constructor self, name, description
        func return  item name and description
        on_take msg "you picked up" {item}
        on_drop msg "you drop your" {item}

player.py -
    constructor self name room - add inventory[]
        func return {player name} is in {room}
        func pickup (item)
        func drop_item

adv.py -
Consider refactoring playerMove if statements...

?? -- __dict__ method - 
https://docs.python.org/3/reference/datamodel.html
https://www.tutorialspoint.com/What-does-built-in-class-attribute-dict-do-in-Python

while player is in room msg "you are in" {current_room} "items" {show itemsArray}

shorten if else? -
    change user input to dynamic "_to"

use sys.exit to close program when player quits

get - player cant pick up same item if in his/her array
drop - see get
feedback msgs when pickup or drop item
